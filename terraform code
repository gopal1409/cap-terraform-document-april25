###lets clone my repo 
 36  git clone https://github.com/gopal1409/catp-terraform-manifest-may-25.git
   37  cd catp-terraform-manifest-may-25/
#once you clone the repo you can do ls and you will see the provider manifest file
40  cat provider.tf 
#then do terraform init
   41  terraform init
 ##this will create a .terraform folder
   43  ls -la
##inside this .terraform folder you will see the 
   50  ls .terraform/providers/registry.terraform.io/hashicorp/aws/5.97.0/linux_amd64/
#lets create our first instance 
 47  git pull
#the above command will sync your code with my code
ls
#this will show another addtional file called as ec2
   48  cat ec2.tf
#####open the file using a nano editor
   49  nano ec2.tf
##inside the file change the name from gopal to your name 
###terraform plan will show a blue print it is like a dry run
   51  terraform plan
#terraform apply will create the resource in the aws console you can filter the same using your name
   52  terraform apply
##finally destroy the resource 
terraform destroy
###terraform validate this will do syntax validation
terraform validate
#terraform plan will read all the tf file and give you an blu print what it is going to create
terraform plan
####this also show the blue print when i say yes it will create the resource and store those resource information inside a file terraform.tfstate
 56  terraform apply
#if you dont want the interuption you can use auto approve
   57  terraform apply --auto-approve
   58  ls
   59  cat terraform.tfstate
#terraform destroy will read the tfstate file and going to destroy all the resource
   60  terraform destroy
   61  cat terraform.tfstate
   62  ls
#the previous state fill will be stored inside the backup file
   63  cat terraform.tfstate.backup
###you need to do the git pull this will give you an error 
terraform destroy
git pull
###do git stash
git stash
git pull
###then open the file ec2. yml in nano or vi editro
vi ec2.yml
###change the name to your name 
####do 
terraform apply
##once apply complete go to the console of aws and look for your instance. 
##then connect the instance 
curl localhost
#3finally copy the public ip of the instance in the browser you can see the test page supported by apache
#this will show the test page if it is not showing you need to wait for a minute or so 
